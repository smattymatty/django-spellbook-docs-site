"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os

from pathlib import Path

from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = [
    'https://django-spellbook.org',
    "spellbook-docs-lbnkp.ondigitalocean.app",
    "django-spellbook.org",
    "localhost",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base',
    'docs',
    'django_spellbook',
    'examples',
    'changelog',
    'analytics'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'analytics.middleware.PageViewMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'analytics.context_processors.analytics_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite3',
        # If one doesn't exist, it will be created at migration time.
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False, # Keep Django's default loggers active
    'formatters': {
        'simple': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{', # Use '{' style formatting
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG', # Capture DEBUG level and above
            'class': 'logging.StreamHandler', # Output to console (stderr)
            'formatter': 'simple', # Use the 'simple' formatter defined above
        },
    },
    'loggers': {
        'django': { # Configure Django's internal loggers
            'handlers': ['console'],
            'level': 'INFO', # Show INFO level messages from Django itself
            'propagate': True,
        },
        'analytics.middleware': { # YOUR specific logger name from the middleware
            'handlers': ['console'],
            'level': 'INFO', # Capture all DEBUG, INFO, WARNING, ERROR messages from your middleware
            'propagate': False, # Don't pass messages up to the root logger if handled here
        },
    },
    'disable_existing_loggers': False, # Disable existing loggers
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Where collectstatic will put files
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Your project's static files
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SPELLBOOK_MD_PATH = [
    BASE_DIR / 'markdown_content',
    BASE_DIR / 'changelog_content',
    BASE_DIR / 'examples_content'
    ]

SPELLBOOK_MD_APP = [
    'docs',
    'changelog',
    'examples'
]

SPELLBOOK_MD_BASE_TEMPLATE = [
    'docs/sb_base.html',
    'changelog/sb_base.html',
    'changelog/sb_base.html',
    ]

SPELLBOOK_MD_URL_PREFIX = [
    'docs',
    'changelog',
    'examples'
]

ANALYTICS_EXCLUDED_PATHS = [
    '/'
]