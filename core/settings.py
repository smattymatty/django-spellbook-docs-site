"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import (
    Path,
)

from decouple import (
    config,
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config(
    "SECRET_KEY",
    default="beeee",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config(
    "DEBUG",
    cast=bool,
    default=True,
)

ALLOWED_HOSTS = [
    "https://django-spellbook.org",
    "spellbook-docs-lbnkp.ondigitalocean.app",
    "django-spellbook.org",
    "localhost",
    "mathewstorm.ca",
]


# Application definition


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_htmx",
    "docs",
    "rest_framework",
    "rest_framework_simplejwt",
    "django_spellbook",
    "base",
    "examples",
    "changelog",
    "analytics",
    "api",
    "editor",
    "sb_theme",
    "RPG",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "analytics.middleware.PageViewMiddleware",
    'sb_theme.middleware.ThemeMiddleware',  # Add theme middleware

]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "analytics.context_processors.analytics_context",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": "db.sqlite3",
        # If one doesn't exist, it will be created at migration time.
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,  # Keep Django's default loggers active
    "formatters": {
        "simple": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",  # Use '{' style formatting
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",  # Capture DEBUG level and above
            "class": "logging.StreamHandler",  # Output to console (stderr)
            "formatter": "simple",  # Use the 'simple' formatter defined above
        },
    },
    "loggers": {
        "django": {  # Configure Django's internal loggers
            "handlers": ["console"],
            "level": "INFO",  # Show INFO level messages from Django itself
            "propagate": True,
        },
        "analytics.middleware": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
        # For my API views
        "api": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
    "disable_existing_loggers": False,  # Disable existing loggers
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation."
            "UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.MinimumLengthValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.CommonPasswordValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.NumericPasswordValidator"
        ),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"  # Where collectstatic will put files
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Your project's static files
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SPELLBOOK_MD_PATH = [
    BASE_DIR / "markdown_content",
    BASE_DIR / "changelog_content",
    BASE_DIR / "examples_content",
]

SPELLBOOK_MD_APP = [
    "docs",
    "changelog",
    "examples",
]

SPELLBOOK_MD_BASE_TEMPLATE = [
    "docs/sb_base.html",
    "changelog/sb_base.html",
    "examples/sb_base.html",
]

SPELLBOOK_MD_URL_PREFIX = [
    "docs",
    "changelog",
    "examples",
]

ANALYTICS_EXCLUDED_PATHS = ["/"]

ANALYTICS_EXCLUDED_PREFIXES = [
    "/api",
    "/prop",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    )
}


# core/settings.py
DATA_UPLOAD_MAX_MEMORY_SIZE = 2 * 1024 * 1024  # 2MB
FILE_UPLOAD_MAX_MEMORY_SIZE = (
    2 * 1024 * 1024
)  # For file parts of multipart requests

MAX_API_REQUEST_SIZE = 1 * 1024 * 1024

# Django Spellbook Theme Configuration
# Custom "magical" theme with brown/tan aesthetic - supports both light and dark modes
MAGICAL_THEME_CONFIG = {
    'name': 'magical',
    'modes': {
        'light': {
            'colors': {
                # Core semantic colors
                'primary': '#8b4513',      # Saddle brown - main brand color
                'secondary': '#4a2500',    # Dark brown - supporting color
                'accent': '#f59e0b',       # Amber - call-to-action
                'neutral': '#d4c4a8',      # Tan - borders and dividers
                
                # Status colors
                'error': '#dc2626',
                'warning': '#f59e0b',
                'success': '#16a34a',
                'info': '#6ae9ff',         # Light cyan - info messages
                
                # Extended colors
                'emphasis': '#8b5cf6',
                'subtle': '#f3f4f6',
                'distinct': '#06b6d4',
                'aether': '#c026d3',
                'artifact': '#ffd700',     # Gold
                'sylvan': '#3f6212',
                'danger': '#a80000',
                
                # System colors for light mode
                'background': '#f0e6d2',   # Light tan - page background
                'surface': '#fff9e6',      # Cream - card backgrounds
                'text': '#2c2c2c',         # Dark gray - primary text
                'text-secondary': '#6b7280', # Medium gray - secondary text
            },
            'generate_variants': True  # Creates 25%, 50%, 75% opacity versions
        },
        'dark': {
            'colors': {
                # Core semantic colors (adjusted for dark mode)
                'primary': '#cd853f',      # Peru - lighter brown for dark mode
                'secondary': '#daa520',    # Goldenrod - warmer for dark
                'accent': '#ffc947',       # Brighter amber for dark
                'neutral': '#8b7355',      # Darker tan
                
                # Status colors
                'error': '#ff6b6b',
                'warning': '#ffc947',
                'success': '#4ade80',
                'info': '#87ceeb',         # Sky blue for dark mode
                
                # Extended colors
                'emphasis': '#a78bfa',
                'subtle': '#1a1410',       # Very dark brown
                'distinct': '#22d3ee',
                'aether': '#d946ef',
                'artifact': '#ffd700',     # Gold stays bright
                'sylvan': '#86efac',
                'danger': '#ef4444',
                
                # System colors for dark mode
                'background': '#1a1410',   # Very dark brown - page background
                'surface': '#2c241c',      # Dark brown - card backgrounds
                'text': '#f0e6d2',         # Light tan - primary text (inverted)
                'text-secondary': '#d4c4a8', # Tan - secondary text
            },
            'generate_variants': True
        }
    }
}

# Default to light mode of magical theme
SPELLBOOK_THEME = MAGICAL_THEME_CONFIG['modes']['light']
